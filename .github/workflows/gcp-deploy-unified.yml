# GitHub Actions – Deploy to Google Cloud Run (簡化版)
# ───────────────────────────────────────────
# jobs:
# cloud_build     → 調用 Google Cloud Build 進行所有工作
# ───────────────────────────────────────────

name: Deploy to Google Cloud Run

on:
  push:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: '部署環境 (production/staging)'
        required: true
        default: 'staging'
        type: choice
        options: [production, staging]

# ---------- Re-usable environment block ----------
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION || 'asia-east1' }}

# 明確設置預設權限
permissions:
  contents: read

jobs:
  # =============================================================
  # Cloud Build Job - 單一 Job 取代舊的 4-Job pipeline
  # =============================================================
  cloud_build:
    name: 🚀 Cloud Build & Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      # --- Checkout ---------------------------------------------------------
      - uses: actions/checkout@v4

      # --- Decide env / tags -----------------------------------------------
      - id: vars
        name: 🛠️ Calc variables
        shell: bash
        run: |
          set -e
          ENVIRONMENT="${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'staging') }}"
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "_ENV=$ENVIRONMENT" >> $GITHUB_ENV

          if [[ "$ENVIRONMENT" == "production" ]]; then
            echo "_MAX_INSTANCES=2" >> $GITHUB_ENV
          else
            echo "_MAX_INSTANCES=1" >> $GITHUB_ENV
          fi

      # --- Auth -------------------------------------------------------------
      - name: 🔑 Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      # --- 調用 Cloud Build --------------------------------------------------
      - name: 🏗️ Cloud Build
        id: build
        shell: bash
        run: |
          set -e
          # 先設置環境變數，讓後續可以直接用 Bash 變數
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "_ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "_ENV=production" >> $GITHUB_ENV
          else
            echo "_ENV=staging" >> $GITHUB_ENV
          fi

          # 設置 REGION (避免重複使用 ${{ env.XXX }})
          echo "REGION=${{ vars.GCP_REGION || 'asia-east1' }}" >> $GITHUB_ENV

          # 添加執行階段需要的變數
          if [ "${{ env._ENV }}" = "production" ]; then
            echo "_MAX_INSTANCES=2" >> $GITHUB_ENV
          else
            echo "_MAX_INSTANCES=1" >> $GITHUB_ENV
          fi

          # 等待變數設置生效
          sleep 1

          # 根據環境設置後綴（直接使用 Bash 變數，避免使用 ${} 格式）
          if [ "$_ENV" = "production" ]; then
            suffix=""
          else
            suffix="-dev"
          fi

          # 手動構建完整映像路徑（使用純 Bash 變數，避免使用 ${} 格式）
          FULL_IMAGE_PATH="$REGION-docker.pkg.dev/${{ env.PROJECT_ID }}/one-key-balance-kit/api$suffix"

          # 調用 Cloud Build（使用純 Bash 變數）
          # 確保使用引號包裹整個 substitutions 字符串
          gcloud builds submit \
            --project=${{ env.PROJECT_ID }} \
            --config=cloudbuild.yaml \
            --substitutions="_IMAGE_PATH=$FULL_IMAGE_PATH,_ENV=$_ENV,_MAX_INSTANCES=$_MAX_INSTANCES,_REGION=$REGION,_GIT_SHA=${{ github.sha }}"

      # --- 顯示部署 URL -----------------------------------------------------
      - name: 🌐 Show Service URL
        if: ${{ success() && !cancelled() }}
        shell: bash
        run: |
          ENV_SUFFIX=$([ "${{ env._ENV }}" = "production" ] && echo "" || echo "-dev")
          SERVICE_NAME="one-key-balance-kit$ENV_SUFFIX"

          URL=$(gcloud run services describe $SERVICE_NAME \
                --region=${{ env.REGION }} \
                --project=${{ env.PROJECT_ID }} \
                --format="value(status.url)")

          echo "✅ ${{ env._ENV }} 環境部署完成"
          echo "🔗 服務 URL: $URL"
